// Leetcode 268

// using maths formula
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n=nums.size();
        int sum=(n*(n+1))/2;
        int sumarr=0;
        for(int i=0;i<n;i++){
            sumarr+=nums[i];
        }
        return sum-sumarr;
        
    }
};
// Time Complexity: O( n )
// Space Complexity: O( 1 )

// using bit manipulation
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n=nums.size();
        int xor1=0,xor2=0;
        for(int i=0;i<n;i++){
            xor1= xor1^i;
            xor2= xor2^nums[i];
        }
        xor1=xor1^n;
        return xor1^xor2;
        
    }
};
// Time Complexity: O( n )
// Space Complexity: O( 1 )
